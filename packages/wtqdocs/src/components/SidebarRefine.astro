---
import { getCollection } from "astro:content";
import LinkItem from "./LinkItem.astro";
import CategoryToggle from "./CategoryToggle.astro";
import CollapseButton from "./CollapseButton.astro";
import type { WathqnyConfig as WathqnyConfigType } from "wtqtypes";

// @ts-ignore
import untypedWathqnyConfig from "/wathqny.config";

const WathqnyConfig: WathqnyConfigType = untypedWathqnyConfig;

const docs = await getCollection("docs");

const { sidebar } = WathqnyConfig;

docs.sort(
  (a: { data: { position: number } }, b: { data: { position: number } }) =>
    a.data.position > b.data.position ? 1 : -1
);

let cutUrl =
  "/" +
  Astro.url.pathname
    .split("/")
    .filter((url) => url !== "")
    .reverse()[0];

let ActiveClass: boolean;
---

<aside class="wtq-sidebar">
  <ul class="sidebar_category" role="tablist">
    {
      function genrateItems() {
        return sidebar?.map((item) => {
          return typeof item === "string" ? (
            <li class:list={[{ "wtq-active": ActiveClass }]} role="tab">
              <CategoryToggle name={item} />
              <ul class="category_collapse">
                <li class="collapse_item">
                  <LinkItem href="/docs" name="link" />
                </li>
              </ul>
            </li>
          ) : (
            <LinkItem href="/docs" name="object" />
          );
        });
      }
    }
  </ul>
  <CollapseButton />
</aside>

<script src="./sidebar.ts"></script>
