---
import { getCollection } from "astro:content";
import Category from "./Category.astro";
import CollapseButton from "./CollapseButton.astro";
import type { WathqnyConfig as WathqnyConfigType } from "wtqtypes";

// @ts-ignore
import untypedWathqnyConfig from "/wathqny.config";

const WathqnyConfig: WathqnyConfigType = untypedWathqnyConfig;

import For from "./For.astro";
import LinkItem from "./LinkItem.astro";
import { slugify } from "../utils";

const { sidebar } = WathqnyConfig;

const docs = await getCollection("docs");

docs.sort(
  (a: { data: { position: number } }, b: { data: { position: number } }) =>
    a.data.position > b.data.position ? 1 : -1
);

let currentUrl =
  "/" +
  Astro.url.pathname
    .split("/")
    .filter((url) => url !== "")
    .reverse()[0];
---
<aside class="wtq-sidebar">
  <ul class="sidebar_category" role="tablist">
    <For each={sidebar}>
      {
        (item: { label: string; id: any }) => (
          <Category
            name={item.label}
            isActive={docs.some((doc: { data: { href: string; title: string | undefined; category: any; }; }) => {
              let documentLink = doc.data.href ?? ("/" + slugify(doc.data.title))
              return doc.data.category == item.id && currentUrl == documentLink
            })}>
            <For each={docs}>
              {(doc: {
                data: {
                  category: string;
                  href: any;
                  title: string | undefined;
                };
              }) =>
                doc.data.category == item.id && (
                  <LinkItem
                    href={
                      "/docs/" +
                      doc.data.category +
                      (doc.data.href ?? "/" + slugify(doc.data.title))
                    }
                    name={doc.data.title}
                  />
                )
              }
            </For>
          </Category>
        )
      }
    </For>
  </ul>
  <CollapseButton />
</aside>

<script src="./sidebar.ts"></script>
