---
import type {
  BuiltinLanguage,
  BuiltinTheme,
  LanguageRegistration,
  SpecialLanguage,
  ThemeRegistration,
  ThemeRegistrationRaw,
} from "shikiji";
import { getHighlighter } from "shikiji";

export interface Props {
  code: string;
  lang?: BuiltinLanguage | SpecialLanguage | LanguageRegistration;
  theme?: BuiltinTheme | ThemeRegistration | ThemeRegistrationRaw;
}

const { code, lang = "plaintext", theme = "dark-plus" } = Astro.props;

const shiki = await getHighlighter({ themes: [theme], langs: [lang] });

const codeOutput = shiki.codeToHtml(code, {
  lang: lang as string,
  theme: theme,
});

const bg = shiki.getTheme(theme).bg;
---

<style define:vars={{ bg }}></style>

<div style={`display: flex; flex-direction: column; padding: 20px 20px 0;font-size: 1.5em;border-radius: 10px; box-shadow: 0 10px 25px -5px rgb(0 0 0 / 0.05), 0 8px 10px -6px rgb(0 0 0 / 0.1); margin: 20px 0; background: var(--bg); overflow-x: auto; `}>
  <div style={`display: flex;  gap: 10px;`}>
    <span style={`width: 15px; height: 15px; border-radius: 50%; background-color: #ed6b60;`}></span>
    <span style={`width: 15px; height: 15px; border-radius: 50%; background-color: #f5be4f;`}></span>
    <span style={`width: 15px; height: 15px; border-radius: 50%; background-color: #62c554;`}></span>
  </div>
  <Fragment set:html={codeOutput} />
</div>
