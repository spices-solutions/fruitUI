---
import type { Props } from "./types"

const {
  title,
  keywords,
  description,
  OGImage,
  sitemap,
  GSVtoken,
  robots,
  extend,
} = Astro.props as Props

const METATITLE = title
const METAIMAGE =
typeof OGImage?.src === 'object' ? (OGImage?.src as { src: string }).src : OGImage?.src;
const METAIMAGEALT = OGImage?.alt
const METADESCRIPTION = description
const METAKEYWORDS = keywords
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
---

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{METATITLE}</title>

  {
    extend?.link?.map((linkTag) => (
      <link {...linkTag} />
    ))
  }

  {
    extend?.meta?.map((metaTag) => (
      <meta {...metaTag} />
    ))
  }

  {sitemap && <link rel="sitemap" href="/sitemap-index.xml" />}

  <meta name="keywords" content={METAKEYWORDS as string} />
  <meta name="description" content={METADESCRIPTION} />
  <meta name="robots" content={robots} />
  <link rel="canonical" href={canonicalURL} />

  <meta property="og:description" content={METADESCRIPTION} />
  <meta property="og:image" content={METAIMAGE} />
  <meta property="og:image:alt" content={METAIMAGEALT} />
  <meta property="og:title" content={METATITLE} />
  <meta property="og:site_name" content={METATITLE} />
  <meta property="og:type" content="website" />
  <meta property="og:url" content={canonicalURL} />
  <meta name="twitter:title" content={METATITLE} />
  <meta name="twitter:image" content={METAIMAGE} />
  <meta name="twitter:image:alt" content={METAIMAGEALT} />
  <meta name="twitter:description" content={METADESCRIPTION} />
  <meta name="twitter:card" content="summary_large_image" />

  <meta name="google-site-verification" content={GSVtoken} />
  <slot />
<head>
