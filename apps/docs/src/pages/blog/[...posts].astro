---
import { Picture } from "astro:assets";
import { type CollectionEntry, getCollection, getEntry } from "astro:content";
import { Breadcrumbs } from "wtqdocs";
import { BlogLayout, AuthorProfile } from "wtqdocs/blog";

export async function getStaticPaths() {
  let posts = await getCollection("blog");

  return posts.map((post) => {
    return {
      params: { posts: post.data.tags.toLowerCase() + post.data.href },
      props: { post },
    };
  });
}

interface Props {
  post: CollectionEntry<"blog">;
  authors: CollectionEntry<"authors">;
}

const { post } = Astro.props;

const { authors } = post.data;

const authorData = (await getEntry("authors", authors?.id!)) as {
  data: {
    name: string;
    role: string;
    profile: string;
  };
};

const { Content } = await post.render();
---

<BlogLayout>
  <Breadcrumbs />
  <article>
    <span class="wtq-post-head">
      <h1 class="wtq-main-heading">{post.data.title}</h1>
      <AuthorProfile
        name={authorData.data.name}
        role={authorData.data.role}
        image={authorData.data.profile}
      />
      <figure>
        <Picture
          class="wtq-cover"
          width={960}
          height={540}
          src={post.data.OGImage}
          formats={["avif", "webp"]}
          loading="eager"
          alt="A description of my image."
        />
        <figcaption>
          dwaodjwaodjwijdkwahdhjwhgdjwhajdhjwhdwagdkulwdjlkwakldkl;awdiwijdkwahdhjwhgdjwhajdhjwhdwagdkulwdjlkwakldkl;awdiwakdgadhasklg.fendf;jheajgfawjdjagwdnjdcawdjbakwdbjkwabdjb
          dwakdgadhasklg.fendf;jheajgfawjdjagwdnjdcawdjbakwdbjkwabdjb
        </figcaption>
      </figure>
    </span>
    <main id="main-content">
      <Content />
    </main>
  </article>
</BlogLayout>
