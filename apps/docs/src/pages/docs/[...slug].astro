---
import { getEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import HomeIcon from "../../components/HomeIcon.astro";
import ArrowIcon from "../../components/ArrowIcon.astro";

let mangaURL:any[] = Astro.url.pathname.split("/");

mangaURL = mangaURL.filter((url)=> {
  if(url != "") {
    return true
  }
})

export async function getStaticPaths() {
  let docs = await getCollection("docs");

  return docs.map((doc) => {
    return {
      params: { slug: doc.data.category + doc.data.href },
      props: { doc },
    };
  });
}

interface Props {
  doc: CollectionEntry<"docs">;
}

const { doc } = Astro.props;
const { authors } = doc.data;

const authorData = await getEntry("authors", authors?.id);

const { Content } = await doc.render();
---

<Layout
  sidebar={true}
  title={doc.data.title}
  description={doc.data.description}
  keywords={doc.data.title}>
  <ul class="wtq-breadcrumbs" role="tablist">
    <li role="tab">
      <a href="/" class="wtq-breadcrumb" aria-label="Go to the homepage">
        <HomeIcon />
      </a>
    </li>
    {
      mangaURL.map((url, index) => {
        return (
          <>
          <li role="tab">
            <ArrowIcon />
              <a
                href={"/" + mangaURL.slice(0, index + 1).join("/")}
                class="wtq-breadcrumb">
                  {url}
              </a>
            </li>
          </>
        );
      })
    }
  </ul>
  <main class="anim-slide-botto" id="main-content">
  <h1>{doc.data.title}</h1>
    <Content />
  </main>
</Layout>
